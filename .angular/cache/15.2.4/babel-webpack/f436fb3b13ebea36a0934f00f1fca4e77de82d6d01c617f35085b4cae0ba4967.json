{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/ui.service\";\nimport * as i2 from \"@angular/forms\";\nfunction AddTaskComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Day & Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.day = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Set Reminder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.reminder = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.day);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.reminder);\n  }\n}\nexport class AddTaskComponent {\n  constructor(uiService) {\n    this.uiService = uiService;\n    this.onAddTask = new EventEmitter();\n    this.reminder = false;\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.text === \"\") {\n      alert('please add a task');\n      return;\n    }\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n    };\n    this.onAddTask.emit(newTask);\n    this.text = '';\n    this.day = '';\n    this.reminder = false;\n  }\n}\nAddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n  return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.UiService));\n};\nAddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskComponent,\n  selectors: [[\"app-add-task\"]],\n  outputs: {\n    onAddTask: \"onAddTask\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"add-form\", 3, \"ngSubmit\", 4, \"ngFor\"], [1, \"add-form\", 3, \"ngSubmit\"], [1, \"form-contol\"], [\"for\", \"text\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"text\", \"placeholder\", \"Add Task\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"day\"], [\"type\", \"text\", \"name\", \"day\", \"id\", \"day\", \"placeholder\", \"Add Day & Time\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-contol\", \"form-control-check\"], [\"for\", \"reminder\"], [\"type\", \"checkbox\", \"name\", \"reminder\", \"id\", \"reminder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \" Save Task\", 1, \"btn\", \"btn-block\"]],\n  template: function AddTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddTaskComponent_form_0_Template, 14, 3, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngFor\", ctx.onAddTask);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\".add-form[_ngcontent-%COMP%]{\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n  display: block;\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtdGFzay9hZGQtdGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxjQUFjOztBQUVoQiIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtZm9ybXtcclxuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG59XHJcbmxhYmVse1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqCA,YAAY,QAAO,eAAe;;;;;;;ICAvEC,+BAAkE;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IAC/DA,8BAAyB;IACLA,oBAAI;IAAAA,iBAAQ;IAC9BA,gCAAqF;IAAtDA;MAAAA;MAAA;MAAA;IAAA,EAAkB;IAAjDA,iBAAqF;IAEvFA,8BAAyB;IACNA,0BAAU;IAAAA,iBAAQ;IACnCA,gCAAwF;IAA1DA;MAAAA;MAAA;MAAA;IAAA,EAAiB;IAA/CA,iBAAwF;IAE1FA,8BAA4C;IACpBA,6BAAY;IAAAA,iBAAQ;IAC1CA,iCAA+E;IAAxCA;MAAAA;MAAA;MAAA;IAAA,EAAsB;IAA7DA,iBAA+E;IAEjFA,6BAAgE;IAClEA,iBAAO;;;;IAX4BA,eAAkB;IAAlBA,qCAAkB;IAInBA,eAAiB;IAAjBA,oCAAiB;IAIRA,eAAsB;IAAtBA,yCAAsB;;;ADDjE,OAAM,MAAOC,gBAAgB;EAY3BC,YAAqBC,SAAqB;IAArB,cAAS,GAATA,SAAS;IAXpB,cAAS,GAAwB,IAAIJ,YAAY,EAAE;IAM7D,aAAQ,GAAW,KAAK;IAMtB,IAAI,CAACK,YAAY,GAAG,IAAI,CAACD,SAAS,CAACE,QAAQ,EAAE,CAACC,SAAS,CAAEC,KAAK,IAAI,IAAI,CAACC,WAAW,GAAGD,KAAM,CAAC;EAE9F;EACAE,QAAQ,IACR;EACAC,QAAQ;IACN,IAAG,IAAI,CAACC,IAAI,KAAK,EAAE,EAAE;MACnBC,KAAK,CAAC,mBAAmB,CAAC;MAC1B;;IAEF,MAAMC,OAAO,GAAU;MACrBF,IAAI,EAAG,IAAI,CAACA,IAAI;MAChBG,GAAG,EAAG,IAAI,CAACA,GAAG;MACdC,QAAQ,EAAG,IAAI,CAACA;KACjB;IAED,IAAI,CAACC,SAAS,CAACC,IAAI,CAACJ,OAAO,CAAC;IAE5B,IAAI,CAACF,IAAI,GAAG,EAAE;IACd,IAAI,CAACG,GAAG,GAAG,EAAE;IACb,IAAI,CAACC,QAAQ,GAAG,KAAK;EACvB;;AAlCWd,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCV7BvB,oEAcO;;;MAdAA,qCAAgB","names":["EventEmitter","i0","AddTaskComponent","constructor","uiService","subscription","onToggle","subscribe","value","showAddTask","ngOnInit","onSubmit","text","alert","newTask","day","reminder","onAddTask","emit","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\force-N\\angular\\revision\\accelere\\src\\app\\components\\add-task\\add-task.component.ts","C:\\force-N\\angular\\revision\\accelere\\src\\app\\components\\add-task\\add-task.component.html"],"sourcesContent":["import {Component, OnInit , Output , EventEmitter} from '@angular/core';\nimport { Task } from 'src/app/Task';\nimport {UiService} from \"../../services/ui.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent  implements OnInit {\n  @Output() onAddTask : EventEmitter<Task> = new EventEmitter();\n  // @ts-ignore\n  text: string;\n  // @ts-ignore\n  day:string;\n\n  reminder: boolean =false;\n  // @ts-ignore\n  showAddTask: boolean;\n  // @ts-ignore\n  subscription : Subscription;\n  constructor( private uiService : UiService) {\n    this.subscription = this.uiService.onToggle().subscribe((value)=>(this.showAddTask = value));\n\n  }\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    if(this.text === \"\" ){\n      alert('please add a task');\n      return;\n    }\n    const newTask: Task =  {\n      text : this.text,\n      day : this.day,\n      reminder : this.reminder\n    };\n\n    this.onAddTask.emit(newTask);\n\n    this.text = '';\n    this.day = '';\n    this.reminder = false;\n  }\n\n}\n","<form *ngFor=\"onAddTask\" class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-contol\">\n    <label for=\"text\">Task</label>\n    <input type=\"text\" name=\"text\" [(ngModel)]=\"text\" id=\"text\" placeholder=\"Add Task\" />\n  </div>\n  <div class=\"form-contol\">\n    <label for=\"day\">Day & Time</label>\n    <input type=\"text\" name=\"day\" [(ngModel)]=\"day\" id=\"day\" placeholder=\"Add Day & Time\" />\n  </div>\n  <div class=\"form-contol form-control-check\">\n    <label for=\"reminder\">Set Reminder</label>\n    <input type=\"checkbox\" name=\"reminder\" [(ngModel)]=\"reminder\"  id=\"reminder\" />\n  </div>\n  <input type=\"submit\" value=\" Save Task\" class=\"btn btn-block\" />\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}