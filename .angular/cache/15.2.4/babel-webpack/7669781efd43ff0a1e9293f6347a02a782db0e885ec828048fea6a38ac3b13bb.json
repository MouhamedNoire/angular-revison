{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../task-item/task-item.component\";\nimport * as i4 from \"../add-task/add-task.component\";\nfunction TasksComponent_app_task_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-task-item\", 1);\n    i0.ɵɵlistener(\"onDeleteTask\", function TasksComponent_app_task_item_2_Template_app_task_item_onDeleteTask_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteTask(task_r1));\n    })(\"onToggleReminder\", function TasksComponent_app_task_item_2_Template_app_task_item_onToggleReminder_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleReminder(task_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"task\", task_r1);\n  }\n}\nexport class TasksComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.taskService.getTasks().subscribe(tasks => this.tasks = tasks);\n  }\n  deleteTask(task) {\n    this.taskService.deleteTask(task).subscribe(() => this.tasks = this.tasks.filter(t => t.id !== task.id));\n  }\n  toggleReminder(task) {\n    task.reminder = !task.reminder;\n    this.taskService.updateTaskReminder(task).subscribe();\n  }\n  addTask(task) {}\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[3, \"task\", \"onDeleteTask\", \"onToggleReminder\", 4, \"ngFor\", \"ngForOf\"], [3, \"task\", \"onDeleteTask\", \"onToggleReminder\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-add-task\");\n      i0.ɵɵtext(1, \"(onAddTask)=\\\"addTask($event)\\\"\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TasksComponent_app_task_item_2_Template, 1, 1, \"app-task-item\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.TaskItemComponent, i4.AddTaskComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IACAA,wCAIC;IAFcA;MAAA;MAAA;MAAA;MAAA,OAAgBA,yCAAgB;IAAA,EAAC;MAAA;MAAA;MAAA;MAAA,OACbA,6CAAoB;IAAA,EADP;IAKhDA,iBAAgB;;;;IANDA,8BAAa;;;ACM5B,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAD/B,UAAK,GAAW,EAAE;EAElB;EACAC,QAAQ;IACN,IAAI,CAACD,WAAW,CACbE,QAAQ,EAAE,CACVC,SAAS,CAAEC,KAAK,IAAK,IAAI,CAACA,KAAK,GAAGA,KAAM,CAAC;EAC9C;EACAC,UAAU,CAACC,IAAW;IACpB,IAAI,CAACN,WAAW,CACbK,UAAU,CAACC,IAAI,CAAC,CAChBH,SAAS,CAAC,MAAM,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAE,CAAC;EAC9E;EACAC,cAAc,CAACJ,IAAW;IACxBA,IAAI,CAACK,QAAQ,GAAG,CAACL,IAAI,CAACK,QAAQ;IAC9B,IAAI,CAACX,WAAW,CAACY,kBAAkB,CAACN,IAAI,CAAC,CAACH,SAAS,EAAE;EACvD;EACAU,OAAO,CAACP,IAAU,GAElB;;AApBWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR3BrB,oCAAc;MAAAA,+CAA6B;MAAAA,iBAAe;MAC1DA,mFAOgB;;;MAPgBA,eAAQ;MAARA,mCAAQ","names":["i0","TasksComponent","constructor","taskService","ngOnInit","getTasks","subscribe","tasks","deleteTask","task","filter","t","id","toggleReminder","reminder","updateTaskReminder","addTask","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\force-N\\angular\\revision\\accelere\\src\\app\\components\\tasks\\tasks.component.html","C:\\force-N\\angular\\revision\\accelere\\src\\app\\components\\tasks\\tasks.component.ts"],"sourcesContent":["<app-add-task>(onAddTask)=\"addTask($event)\"</app-add-task>\n<app-task-item *ngFor=\"let task of tasks\"\n               [task]=\"task\"\n               (onDeleteTask)=\"deleteTask(task)\"\n               (onToggleReminder)=\"toggleReminder(task)\"\n>\n  <!-- on lui a passe une propriete de task qui ([task]) qui sera egale a une individuelle task\n  issue de la boucle-->\n</app-task-item>\n","import {Component, OnInit} from '@angular/core';\nimport{Task} from \"../../Task\";\nimport {TaskService} from \"../../services/task.service\";\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent  implements OnInit{\n  tasks: Task[] = [];\n  constructor(private taskService:TaskService) {\n  }\n  ngOnInit() : void{\n    this.taskService\n      .getTasks()\n      .subscribe((tasks) =>(this.tasks = tasks));\n  }\n  deleteTask(task : Task){\n    this.taskService\n      .deleteTask(task)\n      .subscribe(() =>(this.tasks = this.tasks.filter((t) => t.id !== task.id)));\n  }\n  toggleReminder(task : Task){\n    task.reminder = !task.reminder;\n    this.taskService.updateTaskReminder(task).subscribe();\n  }\n  addTask(task: Task){\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}